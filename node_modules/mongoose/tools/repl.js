'use strict';

run().catch(error => {
  console.error(error);
  process.exit(-1);
});

<<<<<<< HEAD
async function run() {
=======
async function run () {
>>>>>>> 519770fc49731418f8ee622bc8217bc1810136ed
  const ReplSet = require('mongodb-memory-server').MongoMemoryReplSet;

  // Create new instance
  const replSet = new ReplSet({
    binary: {
<<<<<<< HEAD
      version: process.argv[2]
    },
    instanceOpts: [
      // Set the expiry job in MongoDB to run every second
      {
        port: 27017,
        args: ['--setParameter', 'ttlMonitorSleepSecs=1']
      }
    ],
    dbName: 'mongoose_test',
    replSet: {
      name: 'rs0',
      count: 2,
      storageEngine: 'wiredTiger'
    }
=======
      version: process.argv[3]
    },
    instanceOpts: [
      // Set the expiry job in MongoDB to run every second
      { 
        port: 27017,
        args: ["--setParameter", "ttlMonitorSleepSecs=1"] },
    ],
    dbName: 'mongoose_test',
    replSet: {
      name: "rs0",
      count: 2,
      storageEngine: "wiredTiger",
    },
>>>>>>> 519770fc49731418f8ee622bc8217bc1810136ed
  });

  await replSet.start();
  await replSet.waitUntilRunning();
<<<<<<< HEAD
  console.log('MongoDB-ReplicaSet is now running.');
  console.log(replSet.getUri('mongoose_test'));
=======
  console.log("MongoDB-ReplicaSet is now running.")
  console.log(replSet.getUri("mongoose_test"));
>>>>>>> 519770fc49731418f8ee622bc8217bc1810136ed
}
